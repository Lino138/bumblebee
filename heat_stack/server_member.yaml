heat_template_version: 2018-08-31

description: >
  This template is not meant to be used directly, but as a part of the
  lbaas_with_server_resource_group.yaml template. It forms the pool
  member component of the LBaaS template.

parameters:
  name:
    type: string
  image:
    type: string
  flavor:
    type: string
  availability_zone:
    type: string
  network:
    type: string
  secgroup:
    type: string
  wc_notify:
    type: string
  pool:
    type: string
  port:
    type: string
  subnet:
    type: string
  cloud_config:
    type: string


resources:

  cloud_script:
    type: OS::Heat::SoftwareConfig
    properties:
      group: ungrouped
      config:
        str_replace:
          template: |
            #!/bin/bash -ex
            apt update -y
            apt install -y autoconf build-essential dpkg-dev freerdp2-dev ghostscript libavcodec-dev libavformat-dev libavutil-dev libcairo2-dev libjpeg-turbo8-dev libossp-uuid-dev libpango1.0-dev libpng-dev libpulse-dev libssh2-1-dev libssl-dev libswscale-dev libtelnet-dev libtool-bin libvncserver-dev libvorbis-dev libwebp-dev libwebsockets-dev
            cd /tmp
            wget https://downloads.apache.org/guacamole/1.3.0/source/guacamole-server-1.3.0.tar.gz
            tar xzf guacamole-server-1.3.0.tar.gz
            cd guacamole-server-1.3.0
            ./configure --prefix=/usr/local --with-systemd-dir=/etc/systemd/system
            make -j$(nproc)
            make install
            ldconfig
            groupadd -r guacd
            useradd -r -g guacd -m -d /var/lib/guacd -s /sbin/nologin guacd
            cat << EOF > /etc/systemd/system/guacd.service
            [Unit]
            Description=Guacamole Server
            Documentation=man:guacd(8)
            After=network.target
            [Service]
            User=guacd
            ExecStart=/usr/local/sbin/guacd -f -b 0.0.0.0 -l 4822
            Restart=on-abnormal
            [Install]
            WantedBy=multi-user.target
            EOF
            systemctl daemon-reload
            systemctl enable --now guacd
            systemctl status guacd
            wc_notify --data-binary '{"status": "SUCCESS"}'
          params:
            wc_notify: { get_param: wc_notify }

  server_config:
    type: OS::Heat::MultipartMime
    properties:
      parts:
      - config: { get_param: cloud_config }
      - config: { get_resource: cloud_script }

  server:
    # https://docs.openstack.org/heat/latest/template_guide/openstack.html#OS::Nova::Server
    type: OS::Nova::Server
    properties:
      name: { get_param: name }
      image: { get_param: image }
      flavor: { get_param: flavor }
      availability_zone: { get_param: availability_zone }
      networks: [ {network: {get_param: network} } ]
      security_groups:
        - { get_param: secgroup }
      metadata:
        ansible_host_groups: 'guacd'
        ansible_host_vars: 'role=guacd'
      user_data_format: RAW
      user_data: { get_resource: server_config }

  pool_member:
    # https://docs.openstack.org/heat/latest/template_guide/openstack.html#OS::Octavia::PoolMember
    type: OS::Octavia::PoolMember
    properties:
      pool: { get_param: pool }
      address: { get_attr: [ server, first_address ]}
      protocol_port: { get_param: port }
      subnet: { get_param: subnet }
