heat_template_version: rocky

description: Bumblebee Guacamole stack

parameters:
  environment_name:
    type: string
    default: bumblebee
  availability_zone:
    type: string
  image:
    type: string
    constraints:
    - custom_constraint: glance.image
  flavor:
    type: string
    constraints:
    - custom_constraint: nova.flavor
  external_network:
    type: string
    constraints:
    - custom_constraint: neutron.network
  server_count:
    type: number
  zone:
    type: string
    constraints:
    - custom_constraint: designate.zone
  oidc_server:
    type: string
    default: sso.rc.nectar.org.au
  secret:
    type: string
    constraints:
    - custom_constraint: barbican.secret
  db_hostname:
    type: string
  db_name:
    type: string
    default: bumblebee
  db_username:
    type: string
    default: bumblebee
  db_password:
    type: string

resources:

  cloud_config:
    type: OS::Heat::CloudConfig
    properties:
      cloud_config:
        timezone: Australia/Melbourne
        write_files:
        - path: /etc/systemd/network/10-az.network
          content: |
            [Match]
            Name=eth1

            [Network]
            DHCP=ipv4

            [DHCP]
            UseRoutes=false
        - path: /etc/guacamole/guacamole.properties
          content:
            str_replace:
              template: |
                guacd-hostname: localhost
                guacd-port: 4822
                openid-authorization-endpoint: https://__oidc_server__/auth/realms/nectar/protocol/openid-connect/auth
                openid-jwks-endpoint: https://__oidc_server__/auth/realms/nectar/protocol/openid-connect/certs
                openid-issuer: https://__oidc_server__/auth/realms/nectar
                openid-client-id: __client_id__
                openid-redirect-uri: https://__hostname__.__zone__/
                openid-username-claim-type: email
                openid-scope: openid email profile
                openid-allowed-clock-skew: 500
                auth-provider: net.sourceforge.guacamole.net.auth.mysql.MySQLAuthenticationProvider
                mysql-hostname: __db_hostname__
                mysql-port: 3306
                mysql-database: __db_name__
                mysql-username: __db_username__
                mysql-password: __db_password__
              params:
                __oidc_server__: { get_param: oidc_server }
                __client_id__:
                  list_join: [ '-', [{ get_param: environment_name }, 'guacamole', { get_param: availability_zone }] ]
                __hostname__:
                  yaql:
                    expression: '$.data.value.replace("_", "-").toLower()'
                    data:
                      value:
                        list_join: [ '-', [{ get_param: environment_name }, 'guacamole', { get_param: availability_zone }] ]
                __zone__:
                  yaql:
                    expression: 'regex("\.$").replace($.data.value, "")'
                    data:
                      value: { get_param: zone }
                __db_hostname__: { get_param: db_hostname }
                __db_name__: { get_param: db_name }
                __db_username__: { get_param: db_username }
                __db_password__: { get_param: db_password }
        runcmd:
        - ldconfig
        - systemctl restart guacd
        - systemctl restart tomcat9
        - systemctl restart systemd-networkd

  guacmole_server_group:
    type: OS::Heat::ResourceGroup
    # https://docs.openstack.org/heat/latest/template_guide/openstack.html#OS::Heat::ResourceGroup
    properties:
      count: { get_param: server_count }
      resource_def:
        type: stack_guacamole_server.yaml
        properties:
          name:
            list_join: [ '_', [{ get_param: "OS::stack_name" }, '%index%'] ]
          image: { get_param: image }
          flavor: { get_param: flavor }
          availability_zone: { get_param: availability_zone }
          secgroup:
            list_join: [ '_', [{ get_param: environment_name }, 'guacamole'] ]
          network:
            list_join: [ '_', [{ get_param: environment_name }, { get_param: availability_zone }] ]
          network_mgmt:
            list_join: [ '_', [{ get_param: environment_name }, 'mgmt'] ]
          subnet:
            list_join: [ '_', [{ get_param: environment_name }, { get_param: availability_zone }] ]
          pool: { get_resource: pool }
          protocol_port: 8080
          cloud_config: { get_resource: cloud_config }

  loadbalancer:
    # https://docs.openstack.org/heat/latest/template_guide/openstack.html#OS::Octavia::LoadBalancer
    type: OS::Octavia::LoadBalancer
    properties:
      name: { get_param: "OS::stack_name" }
      availability_zone: { get_param: availability_zone }
      vip_subnet:
        list_join: [ '_', [{ get_param: environment_name }, { get_param: availability_zone }] ]

  listener:
    type: OS::Octavia::Listener
    # https://docs.openstack.org/heat/latest/template_guide/openstack.html#OS::Octavia::Listener
    properties:
      name: { get_param: "OS::stack_name" }
      loadbalancer: { get_resource: loadbalancer }
      protocol: TERMINATED_HTTPS
      protocol_port: 443
      default_tls_container_ref: { get_param: secret }

  pool:
    type: OS::Octavia::Pool
    # https://docs.openstack.org/heat/latest/template_guide/openstack.html#OS::Octavia::Pool
    properties:
      name: { get_param: "OS::stack_name" }
      lb_algorithm: SOURCE_IP
      protocol: HTTP
      listener: { get_resource: listener }
      session_persistence:
        type: APP_COOKIE
        cookie_name: sessionid

  monitor:
    # https://docs.openstack.org/heat/latest/template_guide/openstack.html#OS::Octavia::HealthMonitor
    type: OS::Octavia::HealthMonitor
    properties:
      type: HTTP
      delay: 3
      timeout: 3
      max_retries: 3
      url_path: /relocateParameters.js
      pool: { get_resource: pool }

  loadbalancer_floating_ip:
    # https://docs.openstack.org/heat/latest/template_guide/openstack.html#OS::Neutron:FloatingIP
    type: OS::Neutron::FloatingIP
    properties:
      floating_network: { get_param: external_network }
      port_id: { get_attr: [ loadbalancer, vip_port_id ] }

  loadbalancer_record:
    type: OS::Designate::RecordSet
    properties:
      name:
        yaql:
          expression: '$.data.value.replace("_", "-").toLower()'
          data:
            value: { get_param: "OS::stack_name" }
      type: A
      records:
        - { get_attr: [loadbalancer_floating_ip, floating_ip_address] }
      zone: { get_param: zone }
