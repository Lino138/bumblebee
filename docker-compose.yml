version: "3"

services:
  bumblebee:
    build: .
    image: bumblebee
    stdin_open: true
    tty: true
    ports:
    - 8080:8080
    environment: &bb_env
      DEBUG: "True"
      DB_HOST: mariadb
      DB_USER: root
      DB_PASSWORD: toor
      REDIS_HOST: redis
    env_file:
    - .env
    volumes:
    - .:/app
    restart: unless-stopped
    command: django-admin runserver 0.0.0.0:8080
    depends_on:
      init:
        condition: service_completed_successfully
      mariadb:
        condition: service_healthy
      redis:
        condition: service_healthy
      keycloak:
        condition: service_healthy
    links:
    - mariadb:mariadb
    - redis:redis
    - keycloak:keycloak

  init:
    build: .
    links:
    - mariadb:mariadb
    - redis:redis
    environment:
      <<: *bb_env
      DJANGO_MIGRATE: "True"
    volumes:
    - .:/app
    depends_on:
      mariadb:
        condition: service_healthy
    restart: on-failure
    command: /docker-setup.sh

  rqscheduler:
    build: .
    environment: *bb_env
    env_file:
    - .env
    restart: on-failure
    command: django-admin rqscheduler -i5
    depends_on:
      init:
        condition: service_completed_successfully
      mariadb:
        condition: service_healthy
      redis:
        condition: service_healthy
    links:
    - mariadb:mariadb
    - redis:redis
    volumes:
    - .:/app

  rqworker:
    build: .
    links:
    - mariadb:mariadb
    - redis:redis
    environment: *bb_env
    env_file:
    - .env
    restart: on-failure
    command: django-admin rqworker
    depends_on:
      init:
        condition: service_completed_successfully
      mariadb:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
    - .:/app

  mariadb:
    image: mariadb:11.3.2
    environment:
      MARIADB_ROOT_PASSWORD: toor
    ports:
    - 3306:3306
    volumes:
    - ./docker-init/mariadb_data:/var/lib/mysql
    - ./docker-init/mariadb:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD", "mariadb-admin", "-uroot", "-ptoor", "ping", "--silent"]

  redis:
    image: redis:alpine
    ports:
    - 6379:6379
    volumes:
    - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]

  guacd:
    image: guacamole/guacd:1.5.0
    restart: unless-stopped
    ports:
    - 4822:4822

  guacamole:
    image: guacamole/guacamole:1.5.0
    restart: unless-stopped
    environment:
      GUACD_HOSTNAME: guacd
      # Guacamole has to share the database with Bumblebee.
      MYSQL_HOSTNAME: mariadb
      MYSQL_DATABASE: bumblebee
      MYSQL_USER: root
      MYSQL_PASSWORD: toor
    env_file:
    - .env
    ports:
    - 9000:8080
    depends_on:
      guacd:
        condition: service_started
      mariadb:
        condition: service_healthy
      keycloak:
        condition: service_healthy

  keycloak:
    image: quay.io/keycloak/keycloak:24.0
    environment:
      KC_DB: mariadb
      KC_DB_URL: jdbc:mariadb://mariadb/keycloak
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: keycloak
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_HOSTNAME_STRICT_HTTPS: 'false'
      KC_PROXY: edge
    ports:
    - 8090:8090
    volumes:
    - ./docker-init/keycloak:/opt/keycloak/data/import
    depends_on:
      mariadb:
        condition: service_healthy
    command: start-dev --import-realm --http-port=8090 --http-enabled true --health-enabled true
    restart: on-failure
    healthcheck:
      test: ["CMD-SHELL", "exec 3<>/dev/tcp/127.0.0.1/8090;echo -e \"GET /health/ready HTTP/1.1\r\nhost: http://localhost\r\nConnection: close\r\n\r\n\" >&3;grep \"HTTP/1.1 200 OK\" <&3"]

volumes:
  mariadb_data:
  redis_data:
